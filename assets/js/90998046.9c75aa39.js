"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[566],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},l=Object.keys(e);for(o=0;o<l.length;o++)n=l[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(o=0;o<l.length;o++)n=l[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=o.createContext({}),d=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=d(e.components);return o.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},c=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,u=r(e,["components","mdxType","originalType","parentName"]),c=d(n),m=a,g=c["".concat(s,".").concat(m)]||c[m]||p[m]||l;return n?o.createElement(g,i(i({ref:t},u),{},{components:n})):o.createElement(g,i({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,i=new Array(l);i[0]=c;var r={};for(var s in t)hasOwnProperty.call(t,s)&&(r[s]=t[s]);r.originalType=e,r.mdxType="string"==typeof e?e:a,i[1]=r;for(var d=2;d<l;d++)i[d]=n[d];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}c.displayName="MDXCreateElement"},6500:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return r},metadata:function(){return d},toc:function(){return p}});var o=n(7462),a=n(3366),l=(n(7294),n(3905)),i=["components"],r={sidebar_position:0,title:"Usage from PowerShell"},s=void 0,d={unversionedId:"usage/powershell",id:"usage/powershell",title:"Usage from PowerShell",description:"gsudo detects if it's invoked from PowerShell and elevates PS commands (unless -d is used to elevate CMD commands).",source:"@site/docs/usage/powershell.md",sourceDirName:"usage",slug:"/usage/powershell",permalink:"/gsudo/docs/usage/powershell",editUrl:"https://github.com/gerardog/gsudo/blob/docs/docs/docs/usage/powershell.md",tags:[],version:"current",sidebarPosition:0,frontMatter:{sidebar_position:0,title:"Usage from PowerShell"},sidebar:"tutorialSidebar",previous:{title:"How to Use",permalink:"/gsudo/docs/usage/"},next:{title:"Usage from WSL",permalink:"/gsudo/docs/usage/wsl"}},u={},p=[{value:"Invoke-gsudo cmdlet",id:"invoke-gsudo-cmdlet",level:3},{value:"Shell Config",id:"shell-config",level:2},{value:"Profile loading",id:"profile-loading",level:2},{value:"Known Issues:",id:"known-issues",level:2}],c={toc:p};function m(e){var t=e.components,n=(0,a.Z)(e,i);return(0,l.kt)("wrapper",(0,o.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"gsudo")," detects if it's invoked from PowerShell and elevates PS commands (unless ",(0,l.kt)("inlineCode",{parentName:"p"},"-d")," is used to elevate CMD commands). "),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Prepend ",(0,l.kt)("inlineCode",{parentName:"li"},"gsudo")," for commands without special operators ",(0,l.kt)("inlineCode",{parentName:"li"},"()|&<>")," or single quotes ",(0,l.kt)("inlineCode",{parentName:"li"},"'"),". Otherwise you can ",(0,l.kt)("strong",{parentName:"li"},"pass a string literal")," with the command to be elevate:    ")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-powershell"},"  PS C:\\> gsudo 'powershell string command'\n")),(0,l.kt)("p",null,"Note that the ",(0,l.kt)("inlineCode",{parentName:"p"},"gsudo")," command returns a string that can be captured, not powershell objects. It will ran elevated, in a different process and lexical scope, so it can't access your existing ",(0,l.kt)("inlineCode",{parentName:"p"},"$variables"),", so use variable substitution."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Examples:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-powershell"},"# Elevate PowerShell itself\nPS C:\\> gsudo\n\n# Elevate Commands without ()|&<>' by prepending gsudo\ngsudo Remove-Item ProtectedFile.txt\n# Or pass a string literal:\ngsudo 'Remove-Item ProtectedFile.txt'\n$hash = gsudo '(Get-FileHash \"C:\\My Secret.txt\").Hash'\n\n# Variable substitutions example:\n$file='C:\\My Secret.txt'; $algorithm='md5';\n$hash = gsudo \"(Get-FileHash '$file' -Algorithm $algorithm).Hash\"\n# or \n$hash = gsudo \"(Get-FileHash \"\"$file\"\" -Algorithm $algorithm).Hash\"\n\n# Skip PowerShell wrapper (with -d): run an .EXE or a CMD command directly (optional, faster)\ngsudo -d notepad \n\n# Test gsudo success (optional):\nif ($LastExitCode -eq 999 ) {\n    'gsudo failed to elevate!'\n} elseif ($LastExitCode) {\n    'Command failed!'\n} else { 'Success!' }\n")),(0,l.kt)("h3",{id:"invoke-gsudo-cmdlet"},"Invoke-gsudo cmdlet"),(0,l.kt)("p",null,"Use ",(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"Invoke-gsudo")," CmdLet")," to elevate a ScriptBlock (allowing better PowerShell syntax validation and auto-complete), with auto serialization of inputs, outputs and pipeline objects."),(0,l.kt)("p",null,"   The ScriptBlock will ran elevated in a different process and lexical scope, so it can't access your existing ",(0,l.kt)("inlineCode",{parentName:"p"},"$variables"),". You if you use the ",(0,l.kt)("inlineCode",{parentName:"p"},"$using:variableName")," syntax, it\xb4s serialized value will be applied. The result object is serialized and returned (as a PSObject or PSObject[])."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-powershell"},'# Accepts pipeline input.\nGet-process SpoolSv | Invoke-gsudo { Stop-Process -Force }\n\n# Variable usage\n$folder = "C:\\ProtectedFolder"\nInvoke-gsudo { Remove-Item $using:folder }\n\n# The result is serialized (PSObject) with properties.\n(Invoke-gsudo { Get-ChildItem $using:folder }).LastWriteTime\n')),(0,l.kt)("h2",{id:"shell-config"},"Shell Config"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"For an enhanced experience, import module ",(0,l.kt)("inlineCode",{parentName:"p"},"gsudoModule.psd1"),". This is optional and enables ",(0,l.kt)("inlineCode",{parentName:"p"},"gsudo !!"),", and param auto-complete for ",(0,l.kt)("inlineCode",{parentName:"p"},"Invoke-Gsudo")," cmdlet. "),(0,l.kt)("p",{parentName:"li"},"Add the following line to your $PROFILE (replace with full path)"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-powershell"},"Import-Module 'C:\\FullPathTo\\gsudoModule.psd1'\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Or run:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-powershell"},'Get-Command gsudoModule.psd1 | % { Write-Output "`nImport-Module `"$($_.Source)`"" | Add-Content $PROFILE }\n')),(0,l.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("ul",{parentName:"div"},(0,l.kt)("li",{parentName:"ul"},"You can create a custom alias for gsudo or Invoke-gsudo by adding one of these lines to your ",(0,l.kt)("inlineCode",{parentName:"li"},"$PROFILE"),":",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Set-Alias 'sudo' 'gsudo'")," ",(0,l.kt)("br",null),"or"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Set-Alias 'sudo' 'Invoke-gsudo'"))))))),(0,l.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("ul",{parentName:"div"},(0,l.kt)("li",{parentName:"ul"},"Windows PowerShell (5.x) and PowerShell Core (>6.x) have different ",(0,l.kt)("inlineCode",{parentName:"li"},"$PROFILE")," configuration files, so follow this steps on the version that you use, or both.")))),(0,l.kt)("h2",{id:"profile-loading"},"Profile loading"),(0,l.kt)("p",null,"For faster performance, elevation is called with the ",(0,l.kt)("inlineCode",{parentName:"p"},"-NoProfile")," argument. If your command requires your profile loaded you can:"),(0,l.kt)("p",null,"When using ",(0,l.kt)("inlineCode",{parentName:"p"},"gsudo"),", infix ",(0,l.kt)("inlineCode",{parentName:"p"},"--loadProfile"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"PS C:\\> gsudo --loadProfile echo (1+1)")),(0,l.kt)("li",{parentName:"ul"},"Set as a permanent setting with ",(0,l.kt)("inlineCode",{parentName:"li"},"gsudo config PowerShellLoadProfile true"))),(0,l.kt)("p",null,"When using ",(0,l.kt)("inlineCode",{parentName:"p"},"Invoke-gsudo"),", add ",(0,l.kt)("inlineCode",{parentName:"p"},"-LoadProfile"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"PS C:\\> Invoke-Gsudo { echo (1+1) } -LoadProfile")),(0,l.kt)("li",{parentName:"ul"},"Set as a permanent setting adding ",(0,l.kt)("inlineCode",{parentName:"li"},"$gsudoLoadProfile=$true")," in your ",(0,l.kt)("inlineCode",{parentName:"li"},"$PROFILE")," after ",(0,l.kt)("inlineCode",{parentName:"li"},"Import-Module C:\\FullPathTo\\gsudoModule.psd1"))),(0,l.kt)("h2",{id:"known-issues"},"Known Issues:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Do not install PowerShell as a .Net global tool (i.e. with ",(0,l.kt)("inlineCode",{parentName:"li"},"dotnet tool install --global PowerShell"),"), because it uses a shim tool with ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/PowerShell/PowerShell/issues/11747"},"issues"),". Install with any ",(0,l.kt)("a",{parentName:"li",href:"https://docs.microsoft.com/en-us/powershell/scripting/install/installing-powershell-on-windows"},"other official method")," instead, or with ",(0,l.kt)("inlineCode",{parentName:"li"},"choco install pwsh"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"winget install Microsoft.PowerShell"),".")))}m.isMDXComponent=!0}}]);