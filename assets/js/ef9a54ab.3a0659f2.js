"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[499],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),c=u(n),m=o,g=c["".concat(l,".").concat(m)]||c[m]||p[m]||a;return n?r.createElement(g,i(i({ref:t},d),{},{components:n})):r.createElement(g,i({ref:t},d))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=c;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var u=2;u<a;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},5053:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>u});var r=n(7462),o=(n(7294),n(3905));const a={sidebar_position:1,id:"usage",title:"How to Use",hide_title:!0},i=void 0,s={unversionedId:"usage/usage",id:"usage/usage",title:"How to Use",description:"How to Use",source:"@site/docs/usage/usage.md",sourceDirName:"usage",slug:"/usage/",permalink:"/gsudo/docs/usage/",draft:!1,editUrl:"https://github.com/gerardog/gsudo/blob/docs/docs/docs/usage/usage.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,id:"usage",title:"How to Use",hide_title:!0},sidebar:"tutorialSidebar",previous:{title:"How to Install",permalink:"/gsudo/docs/install"},next:{title:"Usage from PowerShell",permalink:"/gsudo/docs/usage/powershell"}},l={},u=[{value:"How to Use",id:"how-to-use",level:2},{value:"Examples",id:"examples",level:3},{value:"Configuration",id:"configuration",level:3}],d={toc:u};function p(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"how-to-use"},"How to Use"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"gsudo"),"  Opens your shell elevated in the current console."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"gsudo [options] {command} [arguments]"),"\nExecutes the specified command with elevated permissions."),(0,o.kt)("p",null,"Most relevant ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("inlineCode",{parentName:"strong"},"[options]")),":"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"-n | --new")),"        Starts the command in a ",(0,o.kt)("strong",{parentName:"li"},"new")," console with elevated rights (and returns immediately)."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"-w | --wait")),"       Force wait for the process to end (and return the exitcode)."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"-s | --system")),'     Run As Local System account ("NT AUTHORITY\\SYSTEM").'),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"-i | --integrity {v}")),"   Run command with a specific integrity level: ",(0,o.kt)("inlineCode",{parentName:"li"},"Low"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"Medium"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"MediumPlus"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"High")," (default), ",(0,o.kt)("inlineCode",{parentName:"li"},"System"),". For example, use ",(0,o.kt)("inlineCode",{parentName:"li"},"Low")," to launch a restricted process, or use ",(0,o.kt)("inlineCode",{parentName:"li"},"Medium")," to run without Admin rights. "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"-d | --direct")),"     Execute {command} directly. Does not wrap it with your current shell (Pwsh/WSL/MinGw/Yori/etc). Assumes it is a ",(0,o.kt)("inlineCode",{parentName:"li"},"CMD")," command (eg. an ",(0,o.kt)("inlineCode",{parentName:"li"},".EXE")," file)."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"--copyns")),"         Reconnect current connected network shares on the elevated session. Warning! This is verbose, affects the elevated user system-wide (other processes), and can prompt for credentials interactively."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"strong"},"--debug")),"          Debug mode (verbose).")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"gsudo config"),"\nShow current user-settings."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},'gsudo config {key} ["value" | --reset]'),"\nRead, write, or reset a user setting to the default value."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"gsudo status"),"\nShow status information about current user, security, integrity level or other gsudo relevant data."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Note:")," You can use anywhere ",(0,o.kt)("strong",{parentName:"p"},"the ",(0,o.kt)("inlineCode",{parentName:"strong"},"sudo")," alias")," created by the installers."),(0,o.kt)("h3",{id:"examples"},"Examples"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-powershell"},'# elevate the current shell in the current console window (Cmd/PowerShell/Pwsh Core/Yori/Take Command/git-bash/cygwin)\ngsudo\n\n# launch the current shell elevated in a new console window\ngsudo -n\n\n# launch in new window and wait for exit\ngsudo -n -w powershell ./Do-Something.ps1\n\n# launch windows app\ngsudo notepad %windir%\\system32\\drivers\\etc\\hosts\n\n# sudo alias built-in with choco/scoop/manual installers: \nsudo notepad %windir%\\system32\\drivers\\etc\\hosts\n\n# Cmd Commands:\ngsudo type MySecretFile.txt\ngsudo md "C:\\Program Files\\MyApp"\n\n# redirect/pipe input/output/error\ngsudo dir | findstr /c:"bytes free" > FreeSpace.txt\n\n# Elevate last command (sudo bang bang)\ngsudo !!\n')),(0,o.kt)("h3",{id:"configuration"},"Configuration"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-powershell"},'# See current configuration\ngsudo config\n# Configure Reduced logging\ngsudo config LogLevel "Error"\n# Configure a custom Elevated Prompt\ngsudo config Prompt "$P [elevated]$G "\n# Reset to default value\ngsudo config Prompt --reset\n\n# Enable credentials cache (less UAC popups):\ngsudo config CacheMode Auto\n')))}p.isMDXComponent=!0}}]);